name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Validate DSFR compliance
        run: npm run validate
      
      - name: Run linter
        run: npm run lint
        continue-on-error: true
      
      - name: Build project
        run: npm run build
      
      - name: Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
      
      - name: Check for security vulnerabilities
        run: npm audit --audit-level=moderate
        continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check code formatting
        run: npm run format -- --check
        continue-on-error: true
      
      - name: Generate test report
        run: |
          npm test > test-report.txt 2>&1 || true
          cat test-report.txt
      
      - name: Comment test results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const testReport = fs.readFileSync('test-report.txt', 'utf8');
            const body = `## Test Results\n\`\`\`\n${testReport}\n\`\`\``;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
        continue-on-error: true

  validate-widgets:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Validate all widgets
        run: |
          echo "Validating DSFR compliance for all widgets..."
          for file in widgets/**/*.html examples/*.html; do
            if [ -f "$file" ]; then
              echo "Checking: $file"
              node tests/validate-dsfr.js "$file" || true
            fi
          done